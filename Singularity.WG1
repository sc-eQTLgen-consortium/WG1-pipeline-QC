Bootstrap: docker
From: ubuntu:22.04

%labels
	Author = Drew Neavin, Anne Senabouth, and Martijn Vochteloo
	Image_version = 2.0.0

%environment
    export PATH=/opt:/usr/games:/opt/conda/envs/py36/bin:/opt/conda/bin:/opt/minimap2-2.7:/opt/bedtools2/bin:/root/.cargo/bin:/opt/souporcell:/opt/souporcell/troublet/target/release:/opt/vartrix-v1.1.3-x86_64-linux/:/opt/freebayes/scripts:/opt/freebayes:/opt/popscle/bin/:/opt/DoubletDetection/:/opt/Eagle_v2.4.1:/opt/Minimac4:/opt/GenotypeHarmonizer-1.4.23:/opt/picard:$PATH
    export PYTHONPATH=/opt/conda/envs/py36/lib/python3.6/site-packages/
	export BCFTOOLS_PLUGINS=/opt/bcftools-1.10.2/plugins
    export LC_ALL=C
    alias python=python3

%post
    #!/bin/bash
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
    export PATH=/opt/conda/bin/:$PATH
    apt-get update -y
    apt-get upgrade -y
    apt-get install -y build-essential
    apt-get install -y --no-install-recommends apt-utils
    apt-get install -y gcc-7 g++-7 gfortran-7 libgfortran-7-dev
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
    update-alternatives --config gcc
    gcc --version
    apt-get install -y wget
    apt-get install -y curl
    apt-get install -y dirmngr --install-recommends
    apt-get install -y software-properties-common
    apt-get install -y apt-transport-https
    add-apt-repository 'deb http://deb.debian.org/debian buster-backports main'
    apt-get update -y
    apt-get upgrade -y
    apt-get install -y ca-certificates gnupg2
    apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'
    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/debian buster-cran35/' # Demufaxy uses bullseye-cran40
    apt-get update -y
    apt-get install -y r-base
    apt-get install -y r-base-dev
    apt-get update -y
    apt-get install -y libv8-dev
    apt-get update -y

    mkdir -p /usr/share/man/man1
    apt-get install -y openjdk-11-jdk
    java -version

    apt-get install -y python3-tk

    apt-get install -y --no-install-recommends locales

    # Configure default locale
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen en_US.utf8
    /usr/sbin/update-locale LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

    apt-get install -y libncurses5-dev
    apt-get install -y libbz2-dev
    apt-get install -y liblzma-dev
    apt-get install -y zlib1g
    apt-get install -y zlib1g-dev
    apt-get install -y pkg-config
    apt-get install -y libcurl4-openssl-dev
    apt-get install -y graphviz
    apt-get install -y graphviz-dev
    apt-get install -y libxml2
    apt-get install -y libxml2-dev
    apt-get install -y bzip2
    apt-get install -y libssl-dev
    apt-get install -y devscripts

    apt-get install -y git

    # Using 3.21.2 because of Minimac4
    cd /root
        wget https://github.com/Kitware/CMake/releases/download/v3.21.2/cmake-3.21.2.tar.gz
        tar -xzf cmake-3.21.2.tar.gz
        cd  cmake-3.21.2
        ./configure
        make
        make install
        cmake --version

    cd /opt
        wget https://github.com/lh3/minimap2/archive/v2.7.tar.gz
        tar -xzvf v2.7.tar.gz
        rm v2.7.tar.gz
        cd minimap2-2.7
        make

    # Demuxafy uses v2.30
    cd /opt
        wget https://github.com/arq5x/bedtools2/releases/download/v2.28.0/bedtools-2.28.0.tar.gz
        tar -zxvf bedtools-2.28.0.tar.gz
        rm bedtools-2.28.0.tar.gz
        cd bedtools2
        make

    cd /opt
        CARGO_HOME=/opt/.cargo RUSTUP_HOME=/opt/.cargo bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
        . /opt/.cargo/env
        which cargo
        rustup default stable

    cd /opt
        git clone https://github.com/wheaton5/souporcell.git
            cd souporcell/troublet
            cargo build --release
            cd /opt/souporcell/souporcell
            cargo build --release

    /opt/conda/bin/conda create -y -n py36 python=3.6.8
    /opt/conda/bin/conda init bash
    eval "$(conda shell.bash hook)"
    conda activate py36

    /opt/conda/envs/py36/bin/pip install pysam ## souporcell
    /opt/conda/envs/py36/bin/pip install pyvcf ## souporcell
    /opt/conda/envs/py36/bin/pip install numpy
    /opt/conda/envs/py36/bin/pip install pystan==2.17.1.0 # Demuxafy also uses this
    /opt/conda/envs/py36/bin/pip install pyfaidx ## souporcell
    /opt/conda/envs/py36/bin/pip install tensorflow ## required for souporcell
    /opt/conda/envs/py36/bin/pip install pandas
    /opt/conda/envs/py36/bin/pip install matplotlib==3.2.2 # Imputation wants newest
    /opt/conda/envs/py36/bin/pip install scrublet # Demuxafy installs this on py37
    /opt/conda/envs/py36/bin/pip install snakemake
    /opt/conda/envs/py36/bin/pip install CrossMap
    /opt/conda/envs/py36/bin/pip install cget # required for Minimac4
    /opt/conda/envs/py36/bin/pip install doubletdetection

    # Demuxafy uses 6.0.29
    cp /opt/conda/lib/libstdc++.so.6.0.26 /usr/lib/x86_64-linux-gnu/
    mv /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.bkp
    ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.26 /usr/lib/x86_64-linux-gnu/libstdc++.so.6


    R --slave -e 'install.packages("remotes")'
    R --slave -e 'remotes::install_version("argparse", version = "2.2.2")'
    R --slave -e 'remotes::install_version("future.apply", version = "1.11.0")'
    R --slave -e 'remotes::install_version("RColorBrewer", version = "1.1-3")'
    R --slave -e 'remotes::install_version("lsa", version = "0.73.3")'
    R --slave -e 'remotes::install_version("data.table", version = "1.14.8")'
    R --slave -e 'remotes::install_version("xgboost", version = "1.7.5.1")' ### scDblFinder, depends on data.table
    R --slave -e 'remotes::install_version("dplyr", version = "1.1.3")'
    R --slave -e 'remotes::install_version("tidyr", version = "1.3.0")' # depends on dplyr
    R --slave -e 'remotes::install_version("vcfR", version = "1.14.0")' # depends on dplyr
    R --slave -e 'remotes::install_version("ggplot2", version = "3.4.3")'
    R --slave -e 'remotes::install_version("ComplexUpset", version = "1.3.3")' # depends on ggplot2
    R --slave -e 'remotes::install_version("ggpubr", version = "0.6.0")' # depends on ggplot2
    R --slave -e 'remotes::install_version("cowplot", version = "1.1.1")' # depends on ggplot2
    R --slave -e 'remotes::install_version("readr", version = "2.1.4")'
    R --slave -e 'remotes::install_version("tidyverse", version = "2.0.0")' # depends on dplyr, tidyr, ggplot2, readr
    R --slave -e 'remotes::install_github("chris-mcginnis-ucsf/DoubletFinder@1b1d4e2d7f893a3552d9f8f791ab868ee4c782e6")' # Commit of Aug 18, 2023
    R --slave -e 'remotes::install_version("SeuratObject", version = "4.0.4")' # depends on future.apply
    R --slave -e 'remotes::install_version("Seurat", version = "4.1.0")' # depends on future.apply, RColorBrewer, ggplot2, cowplot, SeuratObject

    R --slave -e 'remotes::install_version ("scCustomize", version = "1.1.3")' # depends on Seurat

    R --slave -e 'install.packages("BiocManager")'
    R --slave -e 'BiocManager::install(version = "3.9")' # for R version 4.2
    R --slave -e 'BiocManager::install("ComplexHeatmap")'
	R --slave -e 'BiocManager::install("mbkmeans")' ### scDblFinder
    R --slave -e 'BiocManager::install("SingleCellExperiment")'
    R --slave -e 'BiocManager::install("scDblFinder")' # Depends on SingleCellExperiment
    R --slave -e 'BiocManager::install("scds")'

    # Demuxafy uses v.1.1.22 = latest
    cd /opt
        wget https://github.com/10XGenomics/vartrix/releases/download/v1.1.3/vartrix-v1.1.3-x86_64-linux.tar.gz
        tar xzvf vartrix-v1.1.3-x86_64-linux.tar.gz
        rm vartrix-v1.1.3-x86_64-linux.tar.gz

    # Demuxafy uses 1.16, latest = 1.18
    cd /opt
        wget https://github.com/samtools/htslib/releases/download/1.10.2/htslib-1.10.2.tar.bz2
        tar xvfj htslib-1.10.2.tar.bz2
        rm htslib-1.10.2.tar.bz2
        cd htslib-1.10.2
        ./configure
        make
        make install

    # Demuxafy uses 1.16.1, latest = 1.18
    cd /opt
        wget https://github.com/samtools/samtools/releases/download/1.10/samtools-1.10.tar.bz2
        tar xvfj samtools-1.10.tar.bz2
        rm samtools-1.10.tar.bz2
        cd samtools-1.10
        ./configure
        make
        make install

    # Demuxafy uses 1.16, latest = 1.18
    cd /opt
        wget https://github.com/samtools/bcftools/releases/download/1.10.2/bcftools-1.10.2.tar.bz2
        tar xvfj bcftools-1.10.2.tar.bz2
        rm bcftools-1.10.2.tar.bz2
        cd bcftools-1.10.2
        ./configure
        make
        make install

    # Demuxafy uses 1.3.5 stating 'Some older version dont have the required functionality', latest = 1.3.7
    cd /opt
        git clone https://github.com/ekg/freebayes.git
        wget https://github.com/ekg/freebayes/releases/download/v1.3.1/freebayes-v1.3.1
        mv freebayes-v1.3.1 freebayes/freebayes
        chmod 777 freebayes/freebayes

    # Using version from Demuxafy (v0.1.16 = latest), original used git main branch.
    cd /opt
        wget https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz
        tar xvf vcftools-0.1.16.tar.gz
        rm vcftools-0.1.16.tar.gz
        cd vcftools-0.1.16
        ./configure
        make
        make install

    cd /opt
        git clone https://github.com/statgen/popscle.git
        cd popscle
        git reset --hard da70fc78da385ef049e0e890342acfd62842cae0 # Commit of May 5, 2021
        cat CMakeLists.txt
        mkdir build
        cd build
        cmake ..
        make

    cd /opt
        wget http://ftp.gnu.org/gnu/parallel/parallel-20230922.tar.bz2
        tar xjf parallel-20230922.tar.bz2
        rm parallel-20230922.tar.bz2
        cd parallel-*
        ./configure && make
        yes | make install

	cd /opt
		wget https://alkesgroup.broadinstitute.org/Eagle/downloads/Eagle_v2.4.1.tar.gz
		tar -xzf Eagle_v2.4.1.tar.gz
		rm Eagle_v2.4.1.tar.gz

    # Requires cget and cmake >=v3.2. Latest = v4.1.4. THIS IS A VERY OLD VERSION
	cd /opt
		wget https://github.com/statgen/Minimac4/releases/download/v1.0.2/minimac4-1.0.2-Linux.sh
        bash minimac4-1.0.2-Linux.sh --skip-license TRUE

    # Latest is 1.4.27
	cd /opt
		wget https://github.com/molgenis/systemsgenetics/releases/download/1.4.0_20-8.1/GenotypeHarmonizer-1.4.23-dist.tar.gz
		tar -xzf GenotypeHarmonizer-1.4.23-dist.tar.gz
		rm GenotypeHarmonizer-1.4.23-dist.tar.gz

    # Latest is plink_win64_20230116.zip
    cd /opt
        mkdir plink
        cd plink
            wget https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20210606.zip
            unzip plink_linux_x86_64_20210606.zip
            rm plink_linux_x86_64_20210606.zip

    # Latest is plink2_win_avx2_20230923.zip
    cd /opt
        mkdir plink2
        cd plink2
            wget https://s3.amazonaws.com/plink2-assets/plink2_linux_x86_64_20220223.zip
            unzip plink2_linux_x86_64_20220223.zip
            rm plink2_linux_x86_64_20220223.zip

    # Requires java 1.17
    cd /opt
        wget https://github.com/broadinstitute/picard/archive/refs/tags/3.1.0.tar.gz
        tar -xzf 3.1.0.tar.gz
		rm 3.1.0.tar.gz

    # Always get the newest software.
    cd /opt
        git clone --single-branch --branch scMetaBrain https://github.com/sc-eQTLgen-consortium/WG1-pipeline-QC.git

    cd /opt
        wget https://www.dropbox.com/s/xso2vt3p9h2rh8m/1000G.tar.gz
        tar -xzf 1000G.tar.gz
        rm 1000G.tar.gz

    cd /opt
        wget https://www.dropbox.com/s/uy9828g1r1jt5xy/ImputationTestDataset_plink.tar.gz
		tar -xzf ImputationTestDataset_plink.tar.gz
		rm ImputationTestDataset_plink.tar.gz

	cd /opt
		wget https://www.dropbox.com/s/u8haw4n5t3b8b34/GRCh37_to_GRCh38.chain

	cd /opt
		wget https://www.dropbox.com/s/fvd4pl8no3ngg0l/hg38exonsUCSC.bed

    cd /opt
        wget https://www.dropbox.com/s/m8u61jn4i1mcktp/TestData4PipelineSmall.tar.gz

    chmod 777 -R /opt/WG1-pipeline-QC/Demultiplexing/scripts
    chmod 777 -R /opt/WG1-pipeline-QC/Imputation/scripts

    conda clean --all

##############################
# setup scripts for users
##############################
%apphelp imputation_setup
    This function copies pipeline scripts to the user systems from the Singularity image.
%appenv imputation_setup
    SCRIPT_DIR=/opt/WG1-pipeline-QC/Imputation
    export SCRIPT_DIR
%apprun imputation_setup
    exec cp -a ${SCRIPT_DIR}/. "$PWD"

%apphelp imputation_test_dataset
    This function copies the test dataset to the user systems from the Singularity image.
%appenv imputation_test_dataset
    DATASET=/opt/ImputationTestDataset_plink.tar.gz
    export DATASET
%apprun imputation_test_dataset
    exec cp -a ${DATASET} "$PWD"

%apphelp demultiplexing_setup
    This function copies pipeline scripts to the user systems from the Singularity image.
%appenv demultiplexing_setup
    SCRIPT_DIR=/opt/WG1-pipeline-QC/Demultiplexing
    export SCRIPT_DIR
%apprun demultiplexing_setup
    exec cp -a ${SCRIPT_DIR}/. "$PWD"

%apphelp demultiplexing_test_dataset
    This function copies the test dataset to the user systems from the Singularity image.
%appenv demultiplexing_test_dataset
    TAR=/opt/TestData4PipelineSmall.tar.gz
    export TAR
%apprun demultiplexing_test_dataset
    exec cp -a ${TAR} "$@"

